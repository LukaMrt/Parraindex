name: CI workflow

on:
  push:
  pull_request:
    types: [ opened, synchronize, reopened ]

permissions:
  contents: read

jobs:

  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run test suite
        run: composer tests

      - name: Run mutation tests
        run: vendor/bin/infection --threads=4 --min-msi=75

  sonarcloud:
    name: SonarCloud analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup PHP with Xdebug
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          coverage: xdebug

      - name: Install dependencies with composer
        run: composer update --no-ansi --no-interaction --no-progress

      - name: Run tests with phpunit/phpunit
        run: XDEBUG_MODE=coverage vendor/bin/phpunit --coverage-clover=coverage-report.xml --log-junit=phpunit-report.xml

      - name: Fix code coverage paths
        run: sed -i 's@'$GITHUB_WORKSPACE'@/github/workspace/@g' coverage-report.xml

      - name: Fix phpunit report paths
        run: sed -i 's@'$GITHUB_WORKSPACE'@/github/workspace@g' phpunit-report.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITH_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy-develop:
    name: Deploy develop
    needs: tests
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.USERNAME }}
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: 'cd /var/www/dev.parraindex.com &&
            git add . &&
            git reset --hard &&
            git checkout develop &&
            git pull &&
            composer update &&
            composer install --no-interaction --prefer-dist --optimize-autoloader &&
            sass --update scss:public/css'

  deploy-production:
    name: Deploy production
    needs: tests
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.USERNAME }}
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: 'cd /var/www/parraindex.com &&
            git add . &&
            git reset --hard &&
            git checkout master &&
            git pull &&
            composer update && composer install --no-interaction --prefer-dist --optimize-autoloader &&
            sass --update scss:public/css'